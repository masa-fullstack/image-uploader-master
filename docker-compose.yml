version: "3.7"

volumes:
  node_modules_volume:
  backend_node_modules_volume:

services:
  web:
    build: ./backend/
    container_name: image-uploader-backend
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./backend/api:/app:delegated # share directory
      - backend_node_modules_volume:/app/node_modules
    links:
      - db
    restart: always
    command: "yarn start:dev"

  db:
    image: postgres:11.2
    container_name: image-uploader-db
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres/init.d:/docker-entrypoint-initdb.d
      - ./db/postgres/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root # DB USER
      POSTGRES_PASSWORD: root # DB Password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgres
    user: postgres
    # user: root
    restart: always

  pgadmin4:
    image: dpage/pgadmin4:4.2
    container_name: pgadmin4
    ports:
      - "8000:80"
    volumes:
      - ./db/pgadmin4:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: root # pgAdmin Address
      PGADMIN_DEFAULT_PASSWORD: root # pgAdmin Password
    hostname: pgadmin4
    links:
      - db
    restart: always

  nextjs:
    build: ./frontend/
    container_name: image-uploader-front
    ports:
      - "4001:3000"
      - "8080:8080"
    volumes:
      - ./frontend/app:/usr/src/app
      - node_modules_volume:/usr/src/app/node_modules
    tty: true
    stdin_open: true
    command: "yarn dev"
